apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-app-pedido-produto
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: java-app-pedido-produto
  template:
    metadata:
      labels:
        app: java-app-pedido-produto
    spec:
      containers:
        - name: java-app-pedido-produto
          image: alecigolini/fiap-techchallengeapipedidoproduto:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://pedido-produto-dev.postgres.database.azure.com:5432/postgres
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: POSTGRES_PASSWORD
            - name: SPRING_FLYWAY_URL
              value: jdbc:postgresql://pedido-produto-dev.postgres.database.azure.com:5432/postgres
            - name: SPRING_FLYWAY_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: POSTGRES_USER
            - name: SPRING_FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: POSTGRES_PASSWORD
          resources:
            requests:
              cpu: "400m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1024Mi"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: java-app-pedido-produto
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: java-app-pedido-produto
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: java-app-pedido-produto-ingress
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /pedidos
            pathType: Prefix
            backend:
              service:
                name: java-app-pedido-produto
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: java-app-pedido-produto-hpa
  namespace: default
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind:  Deployment
    name: java-app-pedido-produto
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Pods
          periodSeconds: 15
          value: 1
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          periodSeconds: 60
          value: 1